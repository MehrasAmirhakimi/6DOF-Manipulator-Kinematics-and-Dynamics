FF = (1/(32*a1^2))*(cos(alpha2)^2*(8*d3*d4*(3*a1^2 + 2*d2^2 + (3*a1^2 - 2*d2^2)*cos(2*alpha1))*cos(alpha3) + ...
     (a1^2 + d2^2 + (a1^2 - d2^2)*cos(2*alpha1))*(4*cos(2*theta3)*a3^2 - 4*a3^2 - 4*d4*cos(alpha3 + 2*theta3)*a3 + 4*d4*cos(alpha3 - 2*theta3)*a3 + ...
       8*d3^2 + 2*d4^2 + 6*d4^2*cos(2*alpha3) + d4^2*cos(2*(alpha3 - theta3)) - 2*d4^2*cos(2*theta3) + d4^2*cos(2*(alpha3 + theta3))))*csc(alpha1)^2 + ...
   32*cos(alpha2)*(d3*d2^3 - 2*d3*d4*cos(theta3)*sin(alpha2)*sin(alpha3)*d2^2 + 2*a3*d3*sin(alpha2)*sin(theta3)*d2^2 + d3^3*d2 + 2*d3*d4^2*d2 + ...
     d3*d4^2*cos(alpha3)^2*d2 + a1^2*d3*cot(alpha1)^2*d2 + a1^2*d3*csc(alpha1)^2*d2 - d3*d4^2*sin(alpha3)^2*d2 + a2^2*d3*d2 + a3^2*d3*d2 - d3*r*d2 + ...
     2*a2*a3*d3*cos(theta3)*d2 + 2*a2*d3*d4*sin(alpha3)*sin(theta3)*d2 + a2*d4^2*sin(2*alpha3)*sin(theta3)*d2 - 2*a1^2*d3*z*cot(alpha1)*csc(alpha1) + ...
     d4*cos(alpha3)*(-2*z*cot(alpha1)*csc(alpha1)*a1^2 + cot(alpha1)^2*(d2 + a3*sin(alpha2)*sin(theta3))*a1^2 + 2*a2*a3*d2*cos(theta3) + ...
       d2*(a2^2 + a3^2 + d2^2 + 3*d3^2 + d4^2 + a1^2*csc(alpha1)^2 - r + 2*a3*d2*sin(alpha2)*sin(theta3)))) + ...
   (1/2)*(-4*d4^2*((-csc(alpha1)^2)*a1^2 + 3*csc(alpha1)^2*sin(alpha2)^2*a1^2 - 3*sin(alpha2)^2*a1^2 - csc(alpha1)^2*sin(theta3)^2*a1^2 - ...
       csc(alpha1)^2*sin(alpha2)^2*sin(theta3)^2*a1^2 + sin(alpha2)^2*sin(theta3)^2*a1^2 + sin(theta3)^2*a1^2 - ...
       cot(alpha1)^2*((sin(theta3)^2 - 3)*sin(alpha2)^2 + sin(theta3)^2 + 1)*a1^2 + a1^2 + 4*a2^2 - 2*d2^2 - 8*d3^2 + 6*d2^2*sin(alpha2)^2 + ...
       4*a2^2*sin(theta3)^2 - 2*d2^2*sin(theta3)^2 - 2*d2^2*sin(alpha2)^2*sin(theta3)^2 + ...
       cos(theta3)^2*((-sin(alpha2)^2)*a1^2 + cot(alpha1)^2*(sin(alpha2)^2 + 1)*a1^2 + csc(alpha1)^2*(sin(alpha2)^2 + 1)*a1^2 - a1^2 - 4*a2^2 + 2*d2^2 + ...
         2*d2^2*sin(alpha2)^2) - 8*a2*d2*sin(alpha2)*sin(2*theta3))*cos(alpha3)^2 + ...
     32*d4*(2*d3^3 + a1^2*d3 + 2*a2^2*d3 + 2*a3^2*d3 + 4*d2^2*d3 + 2*d4^2*d3 + a1^2*cos(alpha2)^2*csc(alpha1)^2*d3 + a1^2*sin(alpha2)^2*d3 - ...
       2*d2^2*sin(alpha2)^2*d3 - 2*r*d3 + 4*a3*d2*sin(alpha2)*sin(theta3)*d3 + ...
       cos(theta3)*(4*a2*a3*d3 - d4*(a1^2 + d2^2 + (a1^2 - d2^2)*cos(2*alpha1))*csc(alpha1)^2*sin(2*alpha2)*sin(alpha3)) + ...
       a1^2*a3*csc(alpha1)^2*sin(2*alpha2)*sin(theta3) - a1^2*a3*sin(2*alpha2)*sin(theta3))*cos(alpha3) + ...
     cos(theta3)^2*(8*a1^2*a3^2 + 32*a2^2*a3^2 - 16*d2^2*a3^2 - 12*a1^2*csc(alpha1)^2*a3^2 + 4*a1^2*cos(2*alpha2)*csc(alpha1)^2*a3^2 + ...
       8*a1^2*sin(alpha2)^2*a3^2 - 16*d2^2*sin(alpha2)^2*a3^2 - 128*a2*d2*d4*sin(alpha2)*sin(alpha3)*a3 - 6*a1^2*d4^2 - 24*a2^2*d4^2 + 12*d2^2*d4^2 + ...
       a1^2*(4*a3^2 - 3*d4^2)*(cos(2*alpha2) - 3)*cot(alpha1)^2 + 9*a1^2*d4^2*csc(alpha1)^2 - 3*a1^2*d4^2*cos(2*alpha2)*csc(alpha1)^2 - ...
       6*a1^2*d4^2*sin(alpha2)^2 + 12*d2^2*d4^2*sin(alpha2)^2 + d4^2*cos(2*alpha3)*(a1^2*(cos(2*alpha2) - 3)*cot(alpha1)^2 + ...
         a1^2*(cos(2*alpha2) - 3)*csc(alpha1)^2 + 2*(a1^2 + 4*a2^2 - 2*d2^2 + (a1^2 - 2*d2^2)*sin(alpha2)^2))) + ...
     32*cos(theta3)*(-2*a1^2*a3*d4*sin(alpha2)^2*sin(alpha3)*sin(theta3)*cot(alpha1)^2 - ...
       d4*sin(alpha3)*(2*d3*sin(2*alpha2)*a1^2 + (a1^2 + 3*a2^2)*a3*sin(theta3))*cot(alpha1)^2 - ...
       2*d4*sin(alpha2)*((d2*cot(alpha1)^2*a1^2 - 2*z*cot(alpha1)*csc(alpha1)*a1^2 + d2*(a2^2 + a3^2 + d2^2 + d3^2 + d4^2 + a1^2*csc(alpha1)^2 - r))*...
          sin(alpha3) + d2*d3*d4*sin(2*alpha3)) + a2*a3*(2*(a1^2 + a2^2 + a3^2 + d2^2 + d3^2 + d4^2 - r) + a2*d4*(3*csc(alpha1)^2 + 1)*sin(alpha3)*...
          sin(theta3))) + 2*(-64*z*cot(alpha1)*csc(alpha1)*(d2 + a3*sin(alpha2)*sin(theta3))*a1^2 + ...
       cot(alpha1)^2*((6*a3^2 - 8*d3^2 - 3*d4^2 + 5*d4^2*sin(alpha3)^2 + cos(2*theta3)*(-2*a3^2 + d4^2 + d4^2*sin(alpha3)^2))*sin(alpha2)^2 + ...
         32*a3*d2*sin(theta3)*sin(alpha2) + d4^2*(cos(2*theta3) - 3)*sin(alpha3)^2 - 8*a3*d4*cos(theta3)*sin(alpha3)*sin(theta3) + ...
         2*(2*a3^2 + 8*d3*sin(2*alpha2)*sin(theta3)*a3 + 8*d2^2 + 4*d3^2 + 3*d4^2 + (2*a3^2 - d4^2)*sin(theta3)^2))*a1^2 + ...
       csc(alpha1)^2*((6*a3^2 - 8*d3^2 - 3*d4^2 + 5*d4^2*sin(alpha3)^2 + cos(2*theta3)*(-2*a3^2 + d4^2 + d4^2*sin(alpha3)^2))*sin(alpha2)^2 + ...
         32*a3*d2*sin(theta3)*sin(alpha2) + d4^2*(cos(2*theta3) - 3)*sin(alpha3)^2 - 8*a3*d4*cos(theta3)*sin(alpha3)*sin(theta3) + ...
         2*(2*a3^2 + 8*d3*sin(2*alpha2)*sin(theta3)*a3 + 8*d2^2 + 4*d3^2 + 3*d4^2 + 16*z^2 + (2*a3^2 - d4^2)*sin(theta3)^2))*a1^2 + ...
       2*(4*a1^4 + 8*a2^2*a1^2 + 6*a3^2*a1^2 + 4*d3^2*a1^2 + 5*d4^2*a1^2 - 2*a3^2*sin(theta3)^2*a1^2 + d4^2*sin(theta3)^2*a1^2 - 8*r*a1^2 - ...
         8*a3*d3*sin(2*alpha2)*sin(theta3)*a1^2 + 4*a2^4 + 4*a3^4 + 4*d2^4 + 4*d3^4 + 4*d4^4 + 16*a2^2*a3^2 + 8*a2^2*d2^2 + 12*a3^2*d2^2 + 8*a2^2*d3^2 + ...
         8*a3^2*d3^2 + 16*d2^2*d3^2 + 12*a2^2*d4^2 + 8*a3^2*d4^2 + 14*d2^2*d4^2 + 16*d3^2*d4^2 + 4*r^2 - ...
         (1/2)*d4^2*(-3*a1^2 - 12*a2^2 + 6*d2^2 + 16*d3^2 + (a1^2 + 4*a2^2 - 2*d2^2)*cos(2*theta3))*sin(alpha3)^2 - 8*a2^2*a3^2*sin(theta3)^2 + ...
         4*a3^2*d2^2*sin(theta3)^2 + 4*a2^2*d4^2*sin(theta3)^2 - 2*d2^2*d4^2*sin(theta3)^2 - 8*a2^2*r - 8*a3^2*r - 8*d2^2*r - 8*d3^2*r - 8*d4^2*r + ...
         4*d4*(4*a2*(a1^2 + a2^2 + a3^2 + d2^2 + d3^2 + d4^2 - r) + a3*(a1^2 - 4*d2^2)*cos(theta3))*sin(alpha3)*sin(theta3) + ...
         16*a2*d3*d4^2*sin(2*alpha3)*sin(theta3) + 8*d2*sin(alpha2)*sin(theta3)*(a2*(4*a3^2 - 3*d4^2 + d4^2*cos(2*alpha3))*cos(theta3) + ...
           2*a3*(a2^2 + 2*d4*sin(alpha3)*sin(theta3)*a2 + a3^2 + d2^2 + d3^2 + d4^2 - r)) + (1/4)*sin(alpha2)^2*...
          ((a1^2 - 2*d2^2)*(4*a3^2 - 3*d4^2 + d4^2*cos(2*alpha3))*cos(2*theta3) - 2*(16*a3*d4*sin(alpha3)*sin(2*theta3)*d2^2 + ...
             5*(a1^2 - 2*d2^2)*d4^2*sin(alpha3)^2 + (a1^2 - 2*d2^2)*(6*a3^2 - 8*d3^2 - 3*d4^2)))))));